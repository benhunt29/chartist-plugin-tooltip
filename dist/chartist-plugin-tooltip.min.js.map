{"version":3,"sources":["chartist-plugin-tooltip.js"],"names":["root","factory","define","amd","Chartist","returnExportsGlobal","exports","module","require","this","window","document","show","element","hasClass","className","hide","regex","RegExp","replace","trim","getAttribute","indexOf","next","nextSibling","text","innerText","textContent","defaultOptions","currency","undefined","currencyFormatCallback","tooltipOffset","x","y","anchorToPoint","appendToBody","class","pointClass","plugins","tooltip","options","extend","chart","on","event","selector","callback","$chart","addEventListener","e","target","tooltipHandler","$point","tooltipText","isPieChart","Pie","parentNode","seriesName","meta","hasMeta","value","transformTooltipTextFnc","tooltipFnc","metaIsHTML","txt","createElement","innerHTML","label","$toolTip","setPosition","height","offsetHeight","width","offsetWidth","anchorX","anchorY","offsetX","offsetY","style","top","pageY","left","pageX","box","getBoundingClientRect","pageXOffset","pageYOffset","x2","y2","parseInt","baseVal","tooltipSelector","Bar","donut","container","querySelector","body","appendChild","tooltips"],"mappings":"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","file":"chartist-plugin-tooltip.min.js","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([\"chartist\"], function (Chartist) {\n      return (root.returnExportsGlobal = factory(Chartist));\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory(require(\"chartist\"));\n  } else {\n    root['Chartist.plugins.tooltips'] = factory(Chartist);\n  }\n}(this, function (Chartist) {\n\n  (function (root, factory) {\n      if (typeof define === 'function' && define.amd) {\n          // AMD. Register as an anonymous module.\n          define([\"chartist\"], function (Chartist) {\n              return (root.returnExportsGlobal = factory(Chartist));\n          });\n      } else if (typeof exports === 'object') {\n          // Node. Does not work with strict CommonJS, but\n          // only CommonJS-like enviroments that support module.exports,\n          // like Node.\n          module.exports = factory(require(\"chartist\"));\n      } else {\n          root['Chartist.plugins.tooltips'] = factory(Chartist);\n      }\n  }(this, function (Chartist) {\n\n      /**\n       * Chartist.js plugin to display a data label on top of the points in a line chart.\n       *\n       */\n      /* global Chartist */\n      (function (window, document, Chartist) {\n          'use strict';\n\n          var defaultOptions = {\n              currency: undefined,\n              currencyFormatCallback: undefined,\n              tooltipOffset: {\n                  x: 0,\n                  y: -20\n              },\n              anchorToPoint: false,\n              appendToBody: false,\n              class: undefined,\n              pointClass: 'ct-point'\n          };\n\n          Chartist.plugins = Chartist.plugins || {};\n          Chartist.plugins.tooltip = function (options) {\n              options = Chartist.extend({}, defaultOptions, options);\n\n              return function tooltip(chart) {\n                  var tooltipSelector = options.pointClass;\n                  if (chart instanceof Chartist.Bar) {\n                      tooltipSelector = 'ct-bar';\n                  } else if (chart instanceof Chartist.Pie) {\n                      // Added support for donut graph\n                      if (chart.options.donut) {\n                          tooltipSelector = 'ct-slice-donut';\n                      } else {\n                          tooltipSelector = 'ct-slice-pie';\n                      }\n                  }\n\n                  var $chart = chart.container;\n                  var $toolTip = $chart.querySelector('.chartist-tooltip');\n                  if (!$toolTip) {\n                      $toolTip = document.createElement('div');\n                      $toolTip.className = (!options.class) ? 'chartist-tooltip' : 'chartist-tooltip ' + options.class;\n                      if (!options.appendToBody) {\n                          $chart.appendChild($toolTip);\n                      } else {\n                          document.body.appendChild($toolTip);\n                      }\n                  }\n                  var height = $toolTip.offsetHeight;\n                  var width = $toolTip.offsetWidth;\n\n                  hide($toolTip);\n\n                  function on(event, selector, callback) {\n                      $chart.addEventListener(event, function (e) {\n                          if (!selector || hasClass(e.target, selector))\n                              callback(e);\n                      });\n                  }\n\n                  on('mouseover', tooltipSelector, tooltipHandler);\n\n                  on('mouseout', tooltipSelector, function () {\n                      hide($toolTip);\n                  });\n\n                  on('touchstart', tooltipSelector, tooltipHandler);\n\n                  on('touchend', tooltipSelector, function () {\n                      hide($toolTip);\n                  });\n\n                  on('mousemove', null, function (event) {\n                      if (false === options.anchorToPoint)\n                          setPosition(event);\n                  });\n\n                  function tooltipHandler(event) {\n                      var $point = event.target;\n                      var tooltipText = '';\n\n                      var isPieChart = (chart instanceof Chartist.Pie) ? $point : $point.parentNode;\n                      var seriesName = (isPieChart) ? $point.parentNode.getAttribute('ct:meta') || $point.parentNode.getAttribute('ct:series-name') : '';\n                      var meta = $point.getAttribute('ct:meta') || seriesName || '';\n                      var hasMeta = !!meta;\n                      var value = $point.getAttribute('ct:value');\n\n                      if (options.transformTooltipTextFnc && typeof options.transformTooltipTextFnc === 'function') {\n                          value = options.transformTooltipTextFnc(value);\n                      }\n\n                      if (options.tooltipFnc && typeof options.tooltipFnc === 'function') {\n                          tooltipText = options.tooltipFnc(meta, value);\n                      } else {\n                          if (options.metaIsHTML) {\n                              var txt = document.createElement('textarea');\n                              txt.innerHTML = meta;\n                              meta = txt.value;\n                          }\n\n                          meta = '<span class=\"chartist-tooltip-meta\">' + meta + '</span>';\n\n                          if (hasMeta) {\n                              tooltipText += meta + '<br>';\n                          } else {\n                              // For Pie Charts also take the labels into account\n                              // Could add support for more charts here as well!\n                              if (chart instanceof Chartist.Pie) {\n                                  var label = next($point, 'ct-label');\n                                  if (label) {\n                                      tooltipText += text(label) + '<br>';\n                                  }\n                              }\n                          }\n\n                          if (value) {\n                              if (options.currency) {\n                                  if (options.currencyFormatCallback != undefined) {\n                                      value = options.currencyFormatCallback(value, options);\n                                  } else {\n                                      value = options.currency + value.replace(/(\\d)(?=(\\d{3})+(?:\\.\\d+)?$)/g, '$1,');\n                                  }\n                              }\n                              value = '<span class=\"chartist-tooltip-value\">' + value + '</span>';\n                              tooltipText += value;\n                          }\n                      }\n\n                      if (tooltipText) {\n                          $toolTip.innerHTML = tooltipText;\n                          setPosition(event);\n                          show($toolTip);\n\n                          // Remember height and width to avoid wrong position in IE\n                          height = $toolTip.offsetHeight;\n                          width = $toolTip.offsetWidth;\n                      }\n                  }\n\n                  function setPosition(event) {\n                      height = height || $toolTip.offsetHeight;\n                      width = width || $toolTip.offsetWidth;\n                      var offsetX = -width / 2 + options.tooltipOffset.x\n                      var offsetY = -height + options.tooltipOffset.y;\n                      var anchorX, anchorY;\n\n                      if (!options.appendToBody) {\n                          var box = $chart.getBoundingClientRect();\n                          var left = event.pageX - box.left - window.pageXOffset;\n                          var top = event.pageY - box.top - window.pageYOffset;\n\n                          if (true === options.anchorToPoint && event.target.x2 && event.target.y2) {\n                              anchorX = parseInt(event.target.x2.baseVal.value);\n                              anchorY = parseInt(event.target.y2.baseVal.value);\n                          } else if (true === options.anchorToPoint && event.target.x && event.target.y) {\n                              anchorX = parseInt(event.target.x.baseVal.value);\n                              anchorY = parseInt(event.target.y.baseVal.value);\n                          }\n\n                          $toolTip.style.top = (anchorY || top) + offsetY + 'px';\n                          $toolTip.style.left = (anchorX || left) + offsetX + 'px';\n                      } else {\n                          $toolTip.style.top = event.pageY + offsetY + 'px';\n                          $toolTip.style.left = event.pageX + offsetX + 'px';\n                      }\n                  }\n              }\n          };\n\n          function show(element) {\n              if (!hasClass(element, 'tooltip-show')) {\n                  element.className = element.className + ' tooltip-show';\n              }\n          }\n\n          function hide(element) {\n              var regex = new RegExp('tooltip-show' + '\\\\s*', 'gi');\n              element.className = element.className.replace(regex, '').trim();\n          }\n\n          function hasClass(element, className) {\n              return (' ' + element.getAttribute('class') + ' ').indexOf(' ' + className + ' ') > -1;\n          }\n\n          function next(element, className) {\n              do {\n                  element = element.nextSibling;\n              } while (element && !hasClass(element, className));\n              return element;\n          }\n\n          function text(element) {\n              return element.innerText || element.textContent;\n          }\n\n      }(window, document, Chartist));\n\n      return Chartist.plugins.tooltips;\n\n  }));\n\n  return Chartist.plugins.tooltips;\n\n}));\n"]}